---
alwaysApply: true
---
Para estiliza√ß√£o utilizar as cores que s√£o encontradas no input.css,
Para construir os componentes sempre utilizar os do shadcn alguns j√° est√£o instalados em components/ui,
Sempre construir pensando em responsividade.
Voc√™ precisa de um senso critico sobre as coisas, nem sempre eu estou correto.
N√£o rode nada em terminal

Sempre que identificar um problema t√©cnico, siga esta abordagem sistem√°tica:

### üîç **An√°lise Estruturada**
1. **Busca sem√¢ntica** - Use codebase_search para encontrar componentes relacionados
2. **Identifica√ß√£o m√∫ltipla** - Encontre TODOS os pontos problem√°ticos de uma vez
3. **An√°lise de impacto** - Entenda como cada componente afeta o layout geral

### ‚ö° **Solu√ß√µes Cir√∫rgicas**
1. **Corre√ß√µes precisas** - Atacar apenas o problema espec√≠fico, sem altera√ß√µes desnecess√°rias
2. **Classes Tailwind testadas** - Usar solu√ß√µes que sabemos que funcionam
3. **M√∫ltiplas corre√ß√µes simult√¢neas** - Resolver todos os problemas relacionados em uma sess√£o

### üöÄ **Abordagem Preventiva**
1. **Prote√ß√£o futura** - Adicionar medidas preventivas (ex: overflow-x-hidden)
2. **Responsividade** - Garantir que solu√ß√µes funcionem em todos os breakpoints
3. **Manutenibilidade** - Usar padr√µes consistentes e bem documentados

### üìã **Processo de Execu√ß√£o**
1. **TODO list** - Criar lista de tarefas para rastrear progresso
2. **Corre√ß√µes em lote** - Aplicar todas as mudan√ßas necess√°rias
3. **Verifica√ß√£o de lint** - Sempre verificar erros ap√≥s mudan√ßas
4. **Teste de resultado** - Confirmar que o problema foi resolvido

### üí° **Princ√≠pios**
- **Rapidez**: Diagn√≥stico preciso + solu√ß√µes diretas
- **Efici√™ncia**: Resolver m√∫ltiplos problemas relacionados
- **Preven√ß√£o**: Adicionar prote√ß√µes para evitar problemas futuros
- **Clareza**: Explicar o que foi feito e por qu√™